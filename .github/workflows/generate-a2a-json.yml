name: Proto-derived JSON Schema Sync

on:
  pull_request:
    branches:
      - main
    paths:
      - "specification/grpc/**/*.proto"
      - "scripts/generate_openapi.sh"
      - "scripts/extract_json_schema.sh"
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
    paths:
      - "specification/grpc/**/*.proto"
      - "scripts/generate_openapi.sh"
      - "scripts/extract_json_schema.sh"

jobs:
  generate_json:
    name: Generate a2a.json from proto
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Install protoc and plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler git jq
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
          echo "Go bin: $(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Clone googleapis protos
        run: |
          git clone --depth 1 https://github.com/googleapis/googleapis.git third_party/googleapis

      - name: Generate OpenAPI from proto
        env:
          GOOGLEAPIS_DIR: ${{ github.workspace }}/third_party/googleapis
        run: |
          bash scripts/generate_openapi.sh

      - name: Extract JSON Schema definitions (uncommitted artifact)
        run: |
          bash scripts/extract_json_schema.sh specification/grpc/openapi/a2a.swagger.json specification/json/a2a.json

      - name: Configure Git
        run: |
          git config user.name "a2a-bot"
          git config user.email "a2a-bot@google.com"
      - name: Commit swagger changes (pull_request only, same repo)
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        run: |
          git add specification/grpc/openapi/a2a.swagger.json
          if ! git diff --cached --quiet --exit-code; then
            git commit -m "chore: update generated OpenAPI swagger"
            git push
          else
            echo "No swagger changes detected."

      - name: Commit swagger changes on main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git add specification/grpc/openapi/a2a.swagger.json
          if ! git diff --cached --quiet --exit-code; then
            git commit -m "chore: update generated OpenAPI swagger"
            git push
          else
            echo "No swagger changes detected on main."
