{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "A2A Protocol Schema",
    "description": "JSON Schema for A2A Protocol",
    "$defs": {
      "AgentAuthentication": {
        "description": "Represents authentication requirements for the agent.",
        "properties": {
          "schemes": {
            "items": {
              "type": "string"
            },
            "title": "Schemes",
            "type": "array"
          },
          "credentials": {
            "type": "string",
            "title": "Credentials"
          }
        },
        "required": [
          "schemes"
        ],
        "title": "AgentAuthentication",
        "type": "object"
      },
      "AgentCapabilities": {
        "description": "Represents optional capabilities supported by the agent.",
        "properties": {
          "streaming": {
            "default": false,
            "title": "Streaming",
            "type": "boolean"
          },
          "pushNotifications": {
            "default": false,
            "title": "PushNotifications",
            "type": "boolean"
          },
          "stateTransitionHistory": {
            "default": false,
            "title": "StateTransitionHistory",
            "type": "boolean"
          }
        },
        "title": "AgentCapabilities",
        "type": "object"
      },
      "AgentCard": {
        "description": "Represents the agentâ€™s capabilities/skills and authentication mechanism.",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "provider": {
            "$ref": "#/$defs/AgentProvider"
          },
          "version": {
            "title": "Version",
            "type": "string"
          },
          "documentationUrl": {
            "type": "string",
            "title": "DocumentationUrl"
          },
          "capabilities": {
            "$ref": "#/$defs/AgentCapabilities"
          },
          "authentication": {
            "$ref": "#/$defs/AgentAuthentication"
          },
          "defaultInputModes": {
            "default": [
              "text"
            ],
            "items": {
              "type": "string"
            },
            "title": "DefaultInputModes",
            "type": "array"
          },
          "defaultOutputModes": {
            "default": [
              "text"
            ],
            "items": {
              "type": "string"
            },
            "title": "DefaultOutputModes",
            "type": "array"
          },
          "skills": {
            "items": {
              "$ref": "#/$defs/AgentSkill"
            },
            "title": "Skills",
            "type": "array"
          }
        },
        "required": [
          "name",
          "url",
          "version",
          "capabilities",
          "skills"
        ],
        "title": "AgentCard",
        "type": "object"
      },
      "AgentProvider": {
        "description": "Represents the service provider of the agent.",
        "properties": {
          "organization": {
            "title": "Organization",
            "type": "string"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "required": [
          "organization"
        ],
        "title": "AgentProvider",
        "type": "object"
      },
      "AgentSkill": {
        "description": "Represents a capability the agent can perform.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "examples": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Examples"
          },
          "inputModes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "InputModes"
          },
          "outputModes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "OutputModes"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "AgentSkill",
        "type": "object"
      },
      "Artifact": {
        "description": "Represents the end result generated by an agent as part of a Task.",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parts": {
            "items": {
              "$ref": "#/$defs/Part"
            },
            "title": "Parts",
            "type": "array"
          },
          "index": {
            "type": "integer",
            "default": 0,
            "title": "Index"
          },
          "append": {
            "type": "boolean",
            "title": "Append"
          },
          "lastChunk": {
            "type": "boolean",
            "title": "LastChunk"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "parts"
        ],
        "title": "Artifact",
        "type": "object"
      },
      "AuthenticationInfo": {
        "description": "Represents authentication credentials used by the agent to authenticate with the Push Notification Service when delivering asynchronous notifications.",
        "additionalProperties": {},
        "properties": {
          "schemes": {
            "items": {
              "type": "string"
            },
            "title": "Schemes",
            "type": "array"
          },
          "credentials": {
            "type": "string",
            "title": "Credentials"
          }
        },
        "required": [
          "schemes"
        ],
        "title": "AuthenticationInfo",
        "type": "object"
      },
      "PushNotificationNotSupportedError": {
        "description": "Indicates that the agent does not support delivering updates via push notifications.",
        "properties": {
          "code": {
            "const": -32003,
            "default": -32003,
            "description": "Error code",
            "examples": [
              -32003
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Push Notification is not supported",
            "default": "Push Notification is not supported",
            "description": "A short description of the error",
            "examples": [
              "Push Notification is not supported"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "PushNotificationNotSupportedError",
        "type": "object"
      },
      "CancelTaskRequest": {
        "description": "Represents a JSON-RPC request to cancel a specific Task identified by the `TaskIdParams`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/cancel",
            "default": "tasks/cancel",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskIdParams"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "CancelTaskRequest",
        "type": "object"
      },
      "CancelTaskResponse": {
        "description": "Represents the JSON-RPC response containing the cancelled `Task`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "$ref": "#/$defs/Task"
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "CancelTaskResponse",
        "type": "object"
      },
      "DataPart": {
        "description": "Represents a content part within a Message or Artifact.\n\nThe 'data' field contains key-value pairs of arbitrary content.",
        "properties": {
          "type": {
            "const": "data",
            "default": "data",
            "description": "Type of the part",
            "examples": [
              "data"
            ],
            "title": "Type",
            "type": "string"
          },
          "data": {
            "additionalProperties": {},
            "title": "Data",
            "type": "object"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "type",
          "data"
        ],
        "title": "DataPart",
        "type": "object"
      },
      "FileContent": {
        "description": "Represents a content of a file, either as base64-encoded bytes or a URI.\n\nEnsures that either 'bytes' or 'uri' is provided, but not both.",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "mimeType": {
            "type": "string",
            "title": "Mimetype"
          },
          "bytes": {
            "type": "string",
            "title": "Bytes"
          },
          "uri": {
            "type": "string",
            "title": "Uri"
          }
        },
        "title": "FileContent",
        "type": "object"
      },
      "FilePart": {
        "description": "Represents a content part within a Message or Artifact.\n\nThe 'file' field contains the actual file content, represented by a `FileContent` object.",
        "properties": {
          "type": {
            "const": "file",
            "default": "file",
            "description": "Type of the part",
            "examples": [
              "file"
            ],
            "title": "Type",
            "type": "string"
          },
          "file": {
            "$ref": "#/$defs/FileContent"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "type",
          "file"
        ],
        "title": "FilePart",
        "type": "object"
      },
      "GetTaskPushNotificationRequest": {
        "description": "Represents a JSON-RPC request to retrieve the Push Notification Config for a specific Task identified by `TaskIdParams`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/pushNotification/get",
            "default": "tasks/pushNotification/get",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskIdParams"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "GetTaskPushNotificationRequest",
        "type": "object"
      },
      "GetTaskPushNotificationResponse": {
        "description": "Represents the JSON-RPC response containing the Push Notification Config for a specific Task identified by `TaskPushNotificationConfig`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "$ref": "#/$defs/TaskPushNotificationConfig"
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "GetTaskPushNotificationResponse",
        "type": "object"
      },
      "GetTaskRequest": {
        "description": "Represents a JSON-RPC request to retrieve the generated Artifacts and metadata for a specific Task identified by `TaskQueryParams`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/get",
            "default": "tasks/get",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskQueryParams"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "GetTaskRequest",
        "type": "object"
      },
      "GetTaskResponse": {
        "description": "Represents the JSON-RPC response containing the requested `Task`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "$ref": "#/$defs/Task"
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "GetTaskResponse",
        "type": "object"
      },
      "InternalError": {
        "description": "Indicates an internal JSON-RPC error that occurred during the processing of the request.",
        "properties": {
          "code": {
            "const": -32603,
            "default": -32603,
            "description": "Error code",
            "examples": [
              -32603
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Internal error",
            "default": "Internal error",
            "description": "A short description of the error",
            "examples": [
              "Internal error"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "additionalProperties": {},
            "type": "object",
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "InternalError",
        "type": "object"
      },
      "InvalidParamsError": {
        "description": "Indicates that the parameters provided in the JSON-RPC request are invalid or malformed.",
        "properties": {
          "code": {
            "const": -32602,
            "default": -32602,
            "description": "Error code",
            "examples": [
              -32602
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Invalid parameters",
            "default": "Invalid parameters",
            "description": "A short description of the error",
            "examples": [
              "Invalid parameters"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "additionalProperties": {},
            "type": "object",
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "InvalidParamsError",
        "type": "object"
      },
      "InvalidRequestError": {
        "description": "Indicates that the JSON-RPC request payload is invalid.",
        "properties": {
          "code": {
            "const": -32600,
            "default": -32600,
            "description": "Error code",
            "examples": [
              -32600
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Request payload validation error",
            "default": "Request payload validation error",
            "description": "A short description of the error",
            "examples": [
              "Request payload validation error"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "additionalProperties": {},
            "type": "object",
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "InvalidRequestError",
        "type": "object"
      },
      "JSONParseError": {
        "description": "Indicates that invalid JSON was sent.",
        "properties": {
          "code": {
            "const": -32700,
            "default": -32700,
            "description": "Error code",
            "examples": [
              -32700
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Invalid JSON payload",
            "default": "Invalid JSON payload",
            "description": "A short description of the error",
            "examples": [
              "Invalid JSON payload"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "additionalProperties": {},
            "type": "object",
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "JSONParseError",
        "type": "object"
      },
      "JSONRPCError": {
        "description": "Represents a standard error object conforming to the JSON-RPC 2.0 specification.",
        "properties": {
          "code": {
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "title": "Message",
            "type": "string"
          },
          "data": {
            "additionalProperties": {},
            "type": "object",
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "JSONRPCError",
        "type": "object"
      },
      "JSONRPCMessage": {
        "description": "Represents the base structure of a JSON-RPC 2.0 message, conforming to the JSON-RPC 2.0 specification.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          }
        },
        "title": "JSONRPCMessage",
        "type": "object"
      },
      "JSONRPCRequest": {
        "description": "Represents a JSON-RPC 2.0 request message, conforming to the JSON-RPC 2.0 specification.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "title": "Method",
            "type": "string"
          },
          "params": {
            "additionalProperties": {},
            "type": "object",
            "title": "Params"
          }
        },
        "required": [
          "method"
        ],
        "title": "JSONRPCRequest",
        "type": "object"
      },
      "JSONRPCResponse": {
        "description": "Represents a JSON-RPC 2.0 response message, conforming to the JSON-RPC 2.0 specification.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "additionalProperties": {},
            "type": "object",
            "title": "Result"
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "JSONRPCResponse",
        "type": "object"
      },
      "Message": {
        "description": "Represents a Message, which contains any content that is not an Artifact.",
        "properties": {
          "role": {
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role",
            "type": "string"
          },
          "parts": {
            "items": {
              "$ref": "#/$defs/Part"
            },
            "title": "Parts",
            "type": "array"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "role",
          "parts"
        ],
        "title": "Message",
        "type": "object"
      },
      "MethodNotFoundError": {
        "description": "Indicates the method is not valid.",
        "properties": {
          "code": {
            "const": -32601,
            "default": -32601,
            "description": "Error code",
            "examples": [
              -32601
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Method not found",
            "default": "Method not found",
            "description": "A short description of the error",
            "examples": [
              "Method not found"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "MethodNotFoundError",
        "type": "object"
      },
      "PushNotificationConfig": {
        "description": "Represents a Push Notification Config for a Task.",
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          },
          "authentication": {
            "$ref": "#/$defs/AuthenticationInfo"
          }
        },
        "required": [
          "url"
        ],
        "title": "PushNotificationConfig",
        "type": "object"
      },
      "Part": {
        "description": "Represents a fully formed piece of content exchanged between a client and a remote agent as part of a Message or an Artifact.",
        "anyOf": [
          {
            "$ref": "#/$defs/TextPart"
          },
          {
            "$ref": "#/$defs/FilePart"
          },
          {
            "$ref": "#/$defs/DataPart"
          }
        ],
        "title": "Part"
      },
      "SendTaskRequest": {
        "description": "Represents a JSON-RPC request to start a new Task, resume an interrupted one, or reopen a completed Task.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/send",
            "default": "tasks/send",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskSendParams"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "SendTaskRequest",
        "type": "object"
      },
      "SendTaskResponse": {
        "description": "Represents the JSON-RPC response containing the requested `Task`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "$ref": "#/$defs/Task"
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "SendTaskResponse",
        "type": "object"
      },
      "SendTaskStreamingRequest": {
        "description": "Represents a JSON-RPC request to start a new Task with streaming enabled using SSE.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/sendSubscribe",
            "default": "tasks/sendSubscribe",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskSendParams"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "SendTaskStreamingRequest",
        "type": "object"
      },
      "SendTaskStreamingResponse": {
        "description": "Represents the streamed JSON-RPC response containing updates for a specific Task, delivered as either a `TaskStatusUpdateEvent` or `TaskArtifactUpdateEvent`, and initiated with SSE.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/$defs/TaskStatusUpdateEvent"
              },
              {
                "$ref": "#/$defs/TaskArtifactUpdateEvent"
              }
            ]
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "SendTaskStreamingResponse",
        "type": "object"
      },
      "SetTaskPushNotificationRequest": {
        "description": "Represents a JSON-RPC request for setting a Push Notification Config for a specific Task identified by `TaskPushNotificationConfig`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/pushNotification/set",
            "default": "tasks/pushNotification/set",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskPushNotificationConfig"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "SetTaskPushNotificationRequest",
        "type": "object"
      },
      "SetTaskPushNotificationResponse": {
        "description": "Represents the JSON-RPC response containing the requested `TaskPushNotificationConfig`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "result": {
            "$ref": "#/$defs/TaskPushNotificationConfig"
          },
          "error": {
            "$ref": "#/$defs/JSONRPCError"
          }
        },
        "title": "SetTaskPushNotificationResponse",
        "type": "object"
      },
      "Task": {
        "description": "Represents a stateful entity created by the client to achieve a specific outcome. A Task contains a status managed by the remote agent, a list of Artifacts as results, and an optional history of Messages.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "title": "SessionId"
          },
          "status": {
            "$ref": "#/$defs/TaskStatus"
          },
          "artifacts": {
            "items": {
              "$ref": "#/$defs/Artifact"
            },
            "type": "array",
            "title": "Artifacts"
          },
          "history": {
            "items": {
              "$ref": "#/$defs/Message"
            },
            "type": "array",
            "title": "History"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "id",
          "status"
        ],
        "title": "Task",
        "type": "object"
      },
      "TaskPushNotificationConfig": {
        "description": "Represents the configuration for Push Notifications associated with a specific Task, including the notification settings and an identifier for the Task.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "pushNotificationConfig": {
            "$ref": "#/$defs/PushNotificationConfig"
          }
        },
        "required": [
          "id",
          "pushNotificationConfig"
        ],
        "title": "TaskPushNotificationConfig",
        "type": "object"
      },
      "TaskNotCancelableError": {
        "description": "Indicates that the Task cannot be canceled by the remote agent.",
        "properties": {
          "code": {
            "const": -32002,
            "default": -32002,
            "description": "Error code",
            "examples": [
              -32002
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Task cannot be canceled",
            "default": "Task cannot be canceled",
            "description": "A short description of the error",
            "examples": [
              "Task cannot be canceled"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "TaskNotCancelableError",
        "type": "object"
      },
      "TaskNotFoundError": {
        "description": "Indicates the Task was not found with the provided ID.",
        "properties": {
          "code": {
            "const": -32001,
            "default": -32001,
            "description": "Error code",
            "examples": [
              -32001
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "Task not found",
            "default": "Task not found",
            "description": "A short description of the error",
            "examples": [
              "Task not found"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "TaskNotFoundError",
        "type": "object"
      },
      "TaskIdParams": {
        "description": "Represents the parameters required to identify a specific Task by its Task ID.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "id"
        ],
        "title": "TaskIdParams",
        "type": "object"
      },
      "TaskQueryParams": {
        "description": "Represents the parameters used to query a specific Task by its Task ID, including optional history length and metadata.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "historyLength": {
            "type": "integer",
            "title": "HistoryLength"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "id"
        ],
        "title": "TaskQueryParams",
        "type": "object"
      },
      "TaskSendParams": {
        "description": "Represents the parameters required for sending content to a remote agent to start, resume, or reopen a specific Task identified by its Task ID.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "sessionId": {
            "title": "SessionId",
            "type": "string"
          },
          "message": {
            "$ref": "#/$defs/Message"
          },
          "pushNotification": {
            "$ref": "#/$defs/PushNotificationConfig"
          },
          "historyLength": {
            "type": "integer",
            "title": "HistoryLength"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "id",
          "message"
        ],
        "title": "TaskSendParams",
        "type": "object"
      },
      "TaskState": {
        "description": "Represents the current lifecycle state of a Task.",
        "enum": [
          "submitted",
          "working",
          "input-required",
          "completed",
          "canceled",
          "failed",
          "unknown"
        ],
        "title": "TaskState",
        "type": "string"
      },
      "TaskStatus": {
        "description": "Represents the current status of a Task including its lifecycle state and an optional message providing additional context.",
        "properties": {
          "state": {
            "$ref": "#/$defs/TaskState"
          },
          "message": {
            "$ref": "#/$defs/Message"
          },
          "timestamp": {
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "state"
        ],
        "title": "TaskStatus",
        "type": "object"
      },
      "TaskResubscriptionRequest": {
        "description": "Represents a JSON-RPC request to resubscribe to updates for a specific Task identified `TaskQueryParams`.",
        "properties": {
          "jsonrpc": {
            "const": "2.0",
            "default": "2.0",
            "title": "Jsonrpc",
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "method": {
            "const": "tasks/resubscribe",
            "default": "tasks/resubscribe",
            "title": "Method",
            "type": "string"
          },
          "params": {
            "$ref": "#/$defs/TaskQueryParams"
          }
        },
        "required": [
          "method",
          "params"
        ],
        "title": "TaskResubscriptionRequest",
        "type": "object"
      },
      "TaskStatusUpdateEvent": {
        "description": "Represents an event containing an update on the status of the requested Task, streamed via SSE.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "status": {
            "$ref": "#/$defs/TaskStatus"
          },
          "final": {
            "default": false,
            "title": "Final",
            "type": "boolean"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "id",
          "status"
        ],
        "title": "TaskStatusUpdateEvent",
        "type": "object"
      },
      "TaskArtifactUpdateEvent": {
        "description": "Represents an event containing an update on the artifact of the requested Task, streamed via SSE.",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "artifact": {
            "$ref": "#/$defs/Artifact"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "id",
          "artifact"
        ],
        "title": "TaskArtifactUpdateEvent",
        "type": "object"
      },
      "TextPart": {
        "description": "Represents a content part within a Message or Artifact.\n\nThe 'text' field contains the actual text content.",
        "properties": {
          "type": {
            "const": "text",
            "default": "text",
            "description": "Type of the part",
            "examples": [
              "text"
            ],
            "title": "Type",
            "type": "string"
          },
          "text": {
            "title": "Text",
            "type": "string"
          },
          "metadata": {
            "additionalProperties": {},
            "type": "object",
            "title": "Metadata"
          }
        },
        "required": [
          "type",
          "text"
        ],
        "title": "TextPart",
        "type": "object"
      },
      "UnsupportedOperationError": {
        "description": "Indicates that the operation requested is not supported.",
        "properties": {
          "code": {
            "const": -32004,
            "default": -32004,
            "description": "Error code",
            "examples": [
              -32004
            ],
            "title": "Code",
            "type": "integer"
          },
          "message": {
            "const": "This operation is not supported",
            "default": "This operation is not supported",
            "description": "A short description of the error",
            "examples": [
              "This operation is not supported"
            ],
            "title": "Message",
            "type": "string"
          },
          "data": {
            "title": "Data"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "UnsupportedOperationError",
        "type": "object"
      },
      "A2ARequest": {
        "description": "Represents a request that can be one of several Task-related operations, including sending, getting, canceling a task, setting or getting push notifications, or resubscribing to a Task.",
        "oneOf": [
          {
            "$ref": "#/$defs/SendTaskRequest"
          },
          {
            "$ref": "#/$defs/GetTaskRequest"
          },
          {
            "$ref": "#/$defs/CancelTaskRequest"
          },
          {
            "$ref": "#/$defs/SetTaskPushNotificationRequest"
          },
          {
            "$ref": "#/$defs/GetTaskPushNotificationRequest"
          },
          {
            "$ref": "#/$defs/TaskResubscriptionRequest"
          }
        ],
        "title": "A2ARequest"
      }
    }
  }